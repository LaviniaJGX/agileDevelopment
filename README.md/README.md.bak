# Assignment 2 - Web API - Automated development process.

Name: Guixin Jiang

## Overview.

...... A statement of the API's context and objectives (just a paragraph)........

This is a course arrangement system to find the accurate courses,teachers and students information.
There are three models: courses , teacher , student.
"courses" has 6 attributes: courseTitle , classHours , studentNumbers , studentCategory , teacherName , teacherType
    In this route,we can get all courses/course by ID/all student numbers/all course hours/course by keyword
                         add a course
			 change hours/student numbers in a course
			 delete a course
"teacher" has 5 attributes: name , teacherType , teacherGender , department , departmentMajor
    In this route,we can get all teachers/teacher by ID/teacher by name/teacher by keyword
                         add a teacher
			 change department/major about a teacher
			 delete a teacher
"student" has 4 attributes: name , studentCategory , coursesNumbers , major
    In this route,we can get all students/studnt by ID/student by name/student by keyword
                         add a student
			 change category/major about a student
			 delete a student

## API endpoints.
 . . . . . List the API's endpoints and state the purpose of each . . . . 
 
 COURSES

 + GET /courses - Get all courses.
 + GET /courses/:id - Get the certain course by its ID.
 + GET /coursesNumbers/numbers - Get all the student numbers.
 + GET /coursesHours/hours - Get all the course hours.
 + GET /coursesElements/:courseTitle - Get all couses with the keyword in coursetitle.
 + POST /courses - Add a course - Add a new course with information.
 + PUT /coursesCertain/:id/:teacherName/CHour - Change a course hours.
 + PUT /coursesCerNum/:id/:teacherName/CNum - Change the student numbers in a course.
 + PUT /courses/:id/:teacherName/Teacher - Change the teacher name in a course.
 + DELETE /courses/:id - Delete a course with its information.


 TEACHER

 + GET /teacher - Get all teachers.
 + GET /teacher/:id - Get the certain teacher information by his ID.
 + GET /teacherName/:name - Get the certain teacher information by his name.
 + GET /teacherElements/:department - Get all teachers which contains the keyword in their name.
 + POST /teacher - Add a new teacher with information.
 + PUT /teacher/:id - Change the teacher department by his ID.
 + PUT /teacherMajor/:id - Change the teacher major in the department by his ID.
 + DELETE /teacher/:id - Delete a teacher with his information.


 STUDENT

 + GET /student - Get all students.
 + GET /student/:id - Get the certain student information by his ID.
 + GET /studentName/:name - Get the certain student information by his name.
 + GET /studentElements/:name - Get all students which contains the keyword in their name.
 + POST /student - Add a new student with information.
 + PUT /student/:id - Change the student category by his ID.
 + PUT /studentMajor/:id - Change the student major by his ID.
 + DELETE /student/:id - Delete a student with his information.

## Continuous Integration and Test results.

. . . URL of the Travis build page for web API, 

https://travis-ci.org/LaviniaJGX/coursestest


. . . URL of published test coverage results on Coveralls,  

https://coveralls.io/github/LaviniaJGX/coursestest

. . . URL of deployed test coverage results on Heroku,  

http://vuecoursestest.herokuapp.com


## Extra features.
. . . . Briefly state any extra features of your server-side submission for assignment 2 thst you feel should be high-lighted . . . . .

1.Use supervisor: Monitor my code changes and restart Node.js automatically.
2.This has been deployed on Heroku. 
  Heroku email: d13130803861@gmail.com    password: dailuly93624_   vuecoursestest
3.Build automation: Use npm scripts to perform transpilitation, linting, watching, Running multiple scripts(npm-run-all), 
       Platform-independence, Delete folders, Pre and Post hooks.
4.Published Test results in Travis.
5.Published test couverage results on Coveralls.
6.