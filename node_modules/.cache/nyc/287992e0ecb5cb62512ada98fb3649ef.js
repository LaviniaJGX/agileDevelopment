'use strict';

var cov_2nha6z488d = function () {
    var path = '/Users/dailu/Documents/homework/endback/coursestest/models/user.js',
        hash = 'b1e1c0fcc40c18e1aa702c7dda9042546c960717',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/Users/dailu/Documents/homework/endback/coursestest/models/user.js',
        statementMap: {
            '0': {
                start: {
                    line: 1,
                    column: 15
                },
                end: {
                    line: 1,
                    column: 34
                }
            },
            '1': {
                start: {
                    line: 3,
                    column: 17
                },
                end: {
                    line: 8,
                    column: 2
                }
            },
            '2': {
                start: {
                    line: 10,
                    column: 0
                },
                end: {
                    line: 10,
                    column: 52
                }
            }
        },
        fnMap: {},
        branchMap: {},
        s: {
            '0': 0,
            '1': 0,
            '2': 0
        },
        f: {},
        b: {},
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

var mongoose = (cov_2nha6z488d.s[0]++, require('mongoose'));

var UserSchema = (cov_2nha6z488d.s[1]++, new mongoose.Schema({
    account: String,
    role: Number
}, {
    collection: 'users'
}));

cov_2nha6z488d.s[2]++;
module.exports = mongoose.model('User', UserSchema);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiVXNlclNjaGVtYSIsIlNjaGVtYSIsImFjY291bnQiLCJTdHJpbmciLCJyb2xlIiwiTnVtYmVyIiwiY29sbGVjdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsbUNBQVdDLFFBQVEsVUFBUixDQUFYLENBQUo7O0FBRUEsSUFBSUMscUNBQWEsSUFBSUYsU0FBU0csTUFBYixDQUFvQjtBQUNqQ0MsYUFBUUMsTUFEeUI7QUFFakNDLFVBQUtDO0FBRjRCLENBQXBCLEVBR2Q7QUFDQ0MsZ0JBQVk7QUFEYixDQUhjLENBQWIsQ0FBSjs7O0FBT0FDLE9BQU9DLE9BQVAsR0FBaUJWLFNBQVNXLEtBQVQsQ0FBZSxNQUFmLEVBQXVCVCxVQUF2QixDQUFqQiIsImZpbGUiOiJ1c2VyLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kYWlsdS9Eb2N1bWVudHMvaG9tZXdvcmsvZW5kYmFjay9jb3Vyc2VzdGVzdC9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG5sZXQgVXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIGFjY291bnQ6U3RyaW5nLFxuICAgIHJvbGU6TnVtYmVyXG59LCB7XG4gICAgY29sbGVjdGlvbjogJ3VzZXJzJ1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ1VzZXInLCBVc2VyU2NoZW1hKTsiXX0=